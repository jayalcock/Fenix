/****************************************************************************
* File:  		PWM.c
* Author: 		Jay Alcock
* Date: 		09OCT13
* Description:          
*
* History:
*
****************************************************************************/

/*=========================================================================*/
/*  DEFINE: Preprocessors                                            	   */
/*=========================================================================*/
#define _PWM_c_

#include "PWM.h"
volatile BOOL kill = 0;
/*=========================================================================*/
/*  Functions                                                              */
/*=========================================================================*/

//==========================================================================
// Title: 		PWMInit
// Author:		Jay Alcock
// Date:		
// Description:         Sets up and initialises PWM
//
// Inputs:		None
// Outputs:             None
//==========================================================================
void PWMInit(void)
{
    PCONP |= PCONP_PCPWM0;  // Turn power on to PWM 0 
    
    PINSEL0 |= PINSEL0_P0_7_PWM2 | PINSEL0_P0_8_PWM4 | PINSEL0_P0_9_PWM6; //Select pins 0.7, 0.8, 0.7 & 0.21 to PWM
    PINSEL1 |= PINSEL1_P0_21_PWM5;
    
    PWMTCR = PWMTCR_Counter_Reset;  //Reset counter

    PWMPR = 24;			    /*	Load prescale register with value
					prescale scales the number of timer pulses to the number of clock pulses
					eg. prescale of 2 => 1 timer increment for every two clock pulses */   
    
    PWMMCR = PWMMCR_PWMMR0R;	    //Set match register for PWM 0 to reset timer on match.

    PWMPCR |= PWMPCR_PWMENA2 | PWMPCR_PWMENA4 | PWMPCR_PWMENA6 | PWMPCR_PWMENA5;    //Enable PWM2, 4, 6 & 5.

    PWMMR0 = 5000;		    //Set PWM cycle time to 200hz/5ms 

    PWMLER = PWMLER_Enable_PWM_Match_0_Latch;	//Store values into PWM match registers

    PWMTCR = PWMTCR_PWM_Enable | PWMTCR_Counter_Enable;	//Enable PWM and PWM Counter 
}

//==========================================================================
// Title: 		PWMUpdate
// Author:		Jay Alcock
// Date:		
// Description:         Updates PWM rates for each motor
//
// Inputs:		void pointer
// Outputs:             None
//==========================================================================
void PWMUpdate(void *p)
{
//    int m1, m2, m3, m4;

    while(1)
    {
	ctl_events_wait(CTL_EVENT_WAIT_ALL_EVENTS_WITH_AUTO_CLEAR, &e1, UPDATE_PWM, 0, 0);
	    
	if(kill)    //kill outputs
	    PWMMR2=PWMMR4=PWMMR6=PWMMR5 = 0;
	else
	{
	    // update pwm match registers with output motor speeds
	    PWMMR2 = (motor1Output * 10) + 1000;
	    PWMMR4 = (motor2Output * 10) + 1000;
	    PWMMR6 = (motor3Output * 10) + 1000;
	    PWMMR5 = (motor4Output * 10) + 1000;
	}
 
	// store values into match register
	PWMLER = PWMLER_Enable_PWM_Match_2_Latch | PWMLER_Enable_PWM_Match_4_Latch | PWMLER_Enable_PWM_Match_6_Latch | PWMLER_Enable_PWM_Match_5_Latch;	//shift values into match register
    } 
}

